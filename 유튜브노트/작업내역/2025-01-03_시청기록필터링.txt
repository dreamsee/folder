작업 날짜: 2025-01-03
작업명: YouTube 영상 시청 기록 필터링 기능

구현 내용:
YouTube 검색 결과를 시청 기록 기반으로 필터링하는 기능 추가

수정 파일 및 변경 내용:

1. client/src/components/YouTubePlayer.tsx
   
   [수정된 코드]
   onPlayerStateChange 함수:
   
   삭제됨:
   - 단순 상태 업데이트만 하던 기존 코드
     setPlayerState(event.data);
     setIsPlaying(event.data === window.YT.PlayerState.PLAYING);
   
   추가됨:
   - 영상 재생 시작 시 시청 기록 저장 로직
     if (event.data === window.YT.PlayerState.PLAYING && currentVideoId)
     watchHistory 객체 생성/업데이트
     firstWatchedAt, lastWatchedAt, watchCount 저장
     localStorage.setItem('watchHistory', JSON.stringify(watchHistory))
   
   [수정된 코드]
   useEffect (시간 추적):
   
   삭제됨:
   - 단순 현재 시간과 duration만 업데이트
     setCurrentTime(player.getCurrentTime());
     setDuration(player.getDuration());
   
   추가됨:
   - 시청 진행률 추적 로직
     const current = player.getCurrentTime();
     const total = player.getDuration();
     5초마다 watchHistory 업데이트 (Math.floor(current) % 5 === 0 조건)
     lastPosition, totalWatchTime, progress 계산 및 저장

2. client/src/components/VideoLoader.tsx
   
   [수정된 import]
   삭제됨:
   - import React, { useState } from 'react';
   
   추가됨:
   - import React, { useState, useEffect } from 'react';
   
   [수정된 상태 관리]
   기존 상태:
   - searchResults만 관리
   
   추가된 상태:
   - const [filterMode, setFilterMode] = useState<'all' | 'watched' | 'unwatched'>('all');
   - const [filteredResults, setFilteredResults] = useState<YoutubeVideo[]>([]);
   
   [수정된 handleSearch 함수]
   삭제됨:
   - setSearchResults(data.videos);
   - showNotification 직접 호출
   
   추가됨:
   - applyFilter(data.videos, filterMode); 호출 추가
   - setFilteredResults도 함께 관리
   
   [새로운 함수들]
   추가됨:
   - applyFilter(videos, mode): 
     watchHistory에서 videoId 확인하여 필터링
     watched: watchHistory[video.videoId] 존재하는 것만
     unwatched: watchHistory[video.videoId] 없는 것만
   
   - getWatchInfo(videoId): 
     특정 영상의 시청 정보 반환
   
   - formatWatchDate(dateString): 
     '방금 전', 'N시간 전', '어제', 'N일 전' 형식으로 변환
   
   - useEffect for filterMode: 
     필터 변경 시 재필터링
   
   [UI 렌더링 변경]
   삭제됨:
   - searchResults.map() 직접 렌더링
   - 단순한 영상 카드 UI
     <div className="flex items-center gap-3 p-2 hover:bg-gray-50 rounded cursor-pointer">
   
   추가됨:
   - 필터 토글 버튼 그룹 (전체/본 영상/안 본 영상)
     각 버튼에 개수 표시
   - filteredResults.map() 렌더링
   - 시청 정보 표시:
     watchInfo && 체크마크, formatWatchDate(), progress% 표시
   - 시청한 영상 스타일 변경:
     watchInfo ? 'text-gray-600' : 'text-gray-900'
   - 필터링 결과 없음 메시지:
     filterMode === 'watched' ? '시청한 영상이 없습니다.' : '시청하지 않은 영상이 없습니다.'

데이터 구조:
localStorage.watchHistory = {
  [videoId]: {
    videoId: string (신규),
    firstWatchedAt: ISO 날짜 문자열 (신규),
    lastWatchedAt: ISO 날짜 문자열 (신규),
    watchCount: 시청 횟수 숫자 (신규),
    totalWatchTime: 누적 시청 시간 초 단위 (신규),
    lastPosition: 마지막 재생 위치 초 단위 (신규),
    progress: 진행률 퍼센트 0-100 (신규),
    duration: 영상 전체 길이 초 단위 (신규)
  }
}

삭제된 기능: 없음 (기존 기능 모두 유지)

추가된 기능: 
- 영상 재생 시 자동 시청 기록 저장
- 시청 진행률 실시간 추적 (5초마다)
- 검색 결과 필터링 (전체/시청함/안 봄)
- 시청 정보 시각화 (날짜, 진행률, 횟수)